{"pageContext":{"html":"<h1>Opção cleaner</h1>\n<blockquote>\n<p>Removedor de acentos.</p>\n</blockquote>\n<ul>\n<li>Tipo: <em>Function</em>.</li>\n<li>Valor padrão: <a href=\"https://npm.im/diacritics\"><code>diacritics</code></a>.</li>\n</ul>\n<p>Isso deve ser uma função que faz a remoção de acentos nos caracteres da <em>string</em> antes de filtrá-la, por padrão é usado o função do módulo <a href=\"https://npm.im/diacritics\"><code>diacritics</code></a> que é uma das mais completas funções para normalização desses caracteres. É necessário fazer a remoção de acentos, para padronizar a criação de filtros, para impedir que um filtro seja burlado e principalmente para evitar que seja filtrado trechos indesejáveis dentro da <em>string</em>.</p>\n<h2>Exemplo</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> Piii <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"piii\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> piiiFilters <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"piii-filters\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * Desacentuador personalizado.\n */</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">removeAccents</span> <span class=\"token operator\">=</span> string <span class=\"token operator\">=></span> string\n  <span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\">/ô/g</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"o\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\">/ê/g</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"e\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> piii <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Piii</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  filters<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    piiiFilters<span class=\"token punctuation\">.</span>cu<span class=\"token punctuation\">,</span>\n    piiiFilters<span class=\"token punctuation\">.</span>foder\n   <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  cleaner<span class=\"token punctuation\">:</span> removeAccents\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\npiii<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Vá se fôdêr!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"Vá se *!\"</span>\npiii<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Vá tomar no cú!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"Vá tomar no cú!\"</span></code></pre></div>\n<p>Observe que no último exemplo (de <code>Vá tomar cú!</code>) o palavrão <em>cú</em> não foi filtrado, pois o desacentuador personalizado (definido em <code>removeAccents</code>) não fez a remoção do acento agudo na letra <em>U</em>.</p>\n<h2>Problemas com o não-uso de um desacentuador</h2>\n<p>O <em>Piii.js</em> para filtrar somente uma palavra usa o metacaractere <code>\\b</code> (nas expressões regulares) evintando assim que seja filtrado partes de DENTRO de outras palavras, por exemplo, para que um filtro do palavrão <em>cu</em> não filtre <em>piraru<strong>cu</strong></em> ou <em><strong>cu</strong>rrí<strong>cu</strong>lo</em>. Se não for usado um desacentuador, um problema ocorrerá, porquê o metacactere <code>\\b</code> não interpreta uma palavra quando ela termina ou começa com um caractere acentudado, por exemplo, a expressão regular <code>\\bcú\\b</code> (terminada com <em>ú</em>) não corresponde a nada na <em>string</em> <em>Vai tomar no cú!</em>. Por esses motivos é usado um removedor de acentos que irá remover todos os acentos da <em>string</em>, fazer a filtragem dos palavrões e posteriormente devolver todos os acentos da letras que não foram filtradas.</p>","links":[{"path":"/docs/instalacao","title":"Instalação"},{"path":"/docs/usando","title":"Usando"},{"path":"/docs/options/aliases","title":"Opção aliases"},{"path":"/docs/options/filters","title":"Opção filters"},{"path":"/docs/options/repeated","title":"Opção repeated"},{"path":"/docs/options/censor","title":"Opção censor"},{"path":"/docs/options/cleaner","title":"Opção cleaner"}]}}